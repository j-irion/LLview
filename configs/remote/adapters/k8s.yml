sysinfo:
  LML: "./sysinfo_LML.xml"
  motd: "/etc/motd"
  type: "system"
  prefix: "sys"
  # apply: 'built-in'

nodeinfo:
  methods: ["get_node_info", "get_node_alloc", "get_node_metrics"]
  LML: "./nodes_LML.xml"
  type: "node"
  prefix: "nd"
  systemname:
    env: SYSTEMNAME
  #   file: /path/to/file
  # exclude:
  #   - gpus: '4'
  # include:
  #   - 'jrc000.*'
  #   - 'jrc020.*'
  mem_reserved:
    juwels: 5017.6 # 2.3*1024 + 2.6*1024, # (GPFS page pool + daemon) + (OS image RAM disk)
    jusuf: 14336 # 8*1024 + 6*1024,
    jurecadc: 8000 # Value that does not give negative numbers in any node # 19.85*1024,
  modify_before_mapping:
    State: modify_state
    CPULoad: modify_load
  mapping:
    NodeName: "id"
    CPUTot: "ncores"
    CPULoad: "load"
    ActiveFeatures: "features"
    RealMemory: "physmem"
    State: "state"
    Reason: "reason"
    AllocMem: "allocmem"
    FreeMem: "freemem"
    UsedMem: "memU"
    gpus: "gpus"
    classes: "classes"

jobinfo:
  methods: ["get_job_info"]
  LML: "./jobs_LML.xml"
  type: "job"
  # exclude:
  #   Partition: 'dc-gpu'
  # include:
  #   Partition: 'dc-gpu'
  prefix: "j"
  modify_after_parse:
    NodeList: expand_NodeList
    SchedNodeList: expand_NodeList
    UserId: remove_id_num
    GroupId: remove_id_num
    NumNodes: remove_duplicate
    RunTime: to_seconds
    TimeLimit: to_seconds
    SubmitTime: modify_date
    StartTime: modify_date
    EndTime: modify_date
  modify_before_mapping:
    JobState: modify_state
  mapping:
    JobId: "step"
    JobName: "name"
    UserId: "owner"
    GroupId: "group"
    Priority: "userprio"
    Account: "account"
    QOS: "qos"
    JobState: "state"
    Reason: "reason"
    Dependency: "dependency"
    Restarts: "restart"
    RunTime: "runtime"
    TimeLimit: "wall"
    SubmitTime: "queuedate"
    StartTime: "starttime"
    EndTime: "endtime"
    Partition: "queue"
    status: "status"
    detailedstatus: "detailedstatus"
    NodeList: "nodelist"
    NumNodes: "numnodes"
    NumCPUs: "totalcores"
    CPUs/Task: "tpt"
    Command: "command"
    gpulist: "gpulist"
    Comment: "comment"
    ArrayJobId: "ArrayJobId"
    ArrayTaskId: "ArrayTaskId"
    SchedNodeList: "prenodelist"
    Reservation: "reservation"
    HetJobId: "HetJobId"
    HetJobIdSet: "HetJobIdSet"
    HetJobOffset: "HetJobOffset"

    totaltasks: "totaltasks" #? only for DOSTEPS

reservationinfo:
  methods: []
  LML: "./reservation_LML.xml"
  type: "reservation"
  # exclude:
  #   Partition: 'dc-gpu'
  # include:
  #   Partition: 'dc-gpu'
  prefix: "r"
  modify_after_parse:
    NodeList: expand_NodeList
    StartTime: modify_date
    EndTime: modify_date
  mapping:
    ReservationName: "resid"
    Duration: "wall"
    EndTime: "endtime"
    Nodes: "nodelist"
    # Resid: 'resid' # 'resname' was not used, instead, the ReservationName was put into resid
    StartTime: "starttime"
    State: "state"
    Users: "userlist"
    CoreCnt: "corecnt"
    Flags: "flags"
    NodeCnt: "nodecnt"
    Accounts: "accounts"

classesinfo:
  methods: []
  LML: "./classes_LML.xml"
  type: "class"
  # exclude:
  #   Partition: 'dc-gpu'
  # include:
  #   Partition: 'dc-gpu'
  prefix: "c"
  mapping:
    Name: "name"
    Flags: "Flags"
    GraceTime: "GraceTime"
    MaxJobsPA: "max_jobs_pa"
    MaxJobsPU: "max_jobs_pu"
    MaxSubmitPA: "max_submit_pa"
    MaxSubmitPU: "max_submit_pu"
    MaxTRES: "max_size"
    MaxTRESPA: "max_tres_pa"
    MaxTRESPU: "max_tres_pu"
    MaxTRESPerNode: "max_tres_pn"
    MaxWall: "max_wall"
    MinTRES: "min_size"
    UsageFactor: "UsageFactor"
    Priority: "Priority"
  modify_after_parse:
    MaxTRES: "remove_key"
    MaxWall: "to_hours"

stepinfo: # One entry per step
  methods: []
  LML: "./jobs_step_LML.xml"
  type: "step"
  prefix: "s"
  mapping:
    jobid: "jobid"
    step: "step"
    rc: "rc"
    signr: "signr"
    State: "state"
    JobName: "jobname"
    Start: "start"
    End: "end"
    Timelimit: "time"
    NNodes: "nnodes"
    NTasks: "ntasks"
    NCPUS: "ncpus"
    NodeList: "nodelist"
    Partition: "partition"
    User: "user"
    Account: "account"
  modify_after_parse:
    State: "id_to_username"
